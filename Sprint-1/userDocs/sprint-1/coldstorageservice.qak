QActor coldstorageservice context ctxcoldstorageservice {
	
	// global constants
	[#
		var MAXW = 1000			
		var TICKETTIME = 15
		var Temp_load = 0
		var TicketNumber = 1	
	#]
	
	
	State s0 initial {
		printCurrentMessage
		println("$name START ") color green
	}
	Goto waitrequest
	
	// wait request
	State waitrequest {
		println("$name waiting for requests... ") color green
	}
	Transition t0 whenRequest storerequest -> handlestore
				whenRequest ticketrequest -> handleticket
				
	// handle the first request			
	State handlestore {
		onMsg( storerequest : storerequest( KG ) ) {
			if [# payloadArg(0) < MAXW - Temp_load #] {
				println("$name accepting load of ${payloadArg(0) kg") color green
				println("$name generating ticket n. $TicketNumber") color green
				replyTo storerequest with storeaccepted : storeaccepted( $TicketNumber )
			}
			
			else {
				println("$name refusing load of ${payloadArg(0) kg") color green
				replyTo storerequest with storerefused : storerefused( payloadArg(0) )
			}
		}
	}
	Goto waitrequest
	
	// handle the second request
	State handleticket {
		onMsg( ticketrequest : ticketrequest( TICKET ) ) {
			// need to check the time
			[# var Time = 10  #]
			if [# Time < TICKETTIME #] {
				println("$name accepting ticket n.${payloadArg(0)") color green
				replyTo ticketrequest with chargetaken : chargetaken( payloadArg(0) )
				
				// update load
			}
			
			else {
				println("$name refusing ticket n.${payloadArg(0)") color green
				replyTo ticketrequest with chargerefused : chargerefused( payloadArg(0) )
			}
		}
	}
	Goto waitrequest
}