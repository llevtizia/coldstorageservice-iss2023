QActor coldstorageservice context ctxcoldstorageservice {
	
	// model the cold room
	[#
		var MAXW = 200		
		var TICKETTIME = 15
		var Current_load = 0f
		var TicketNumber = 1	
	#]
	
	// val list = mutableListOf<Triple<Int, Float, Long>>() 
	
	
	State s0 initial {
		printCurrentMessage
		println("$name START ") color green
	}
	Goto waitrequest
	
	// wait request
	State waitrequest {
		println("$name waiting for requests... ") color green
	}
	Transition t0 whenRequest storerequest -> handlestore
				whenRequest ticketrequest -> handleticket
				
	// handle the first request			
	State handlestore {
		onMsg( storerequest : storerequest( KG ) ) {
			[# 
				var LoadToStore = payloadArg(0).toFloat() 
				var FreeSpace = MAXW - Current_load 
			#] 
			if [# LoadToStore <= FreeSpace #] {
				
				println("$name accepting load of $LoadToStore kg ") color green
				println("$name generating ticket n. $TicketNumber") color green
				replyTo storerequest with storeaccepted : storeaccepted( $TicketNumber, $LoadToStore  ) 
				// add the ticket to the list
				//list.add( Triple( TicketNumber, LoadToStore, System.currentTimeMillis() ) )
				
				[# TicketNumber = TicketNumber + 1 #]
			}
			
			else {
				println("$name refusing load of $LoadToStore kg") color green
				replyTo storerequest with storerefused : storerefused( $LoadToStore ) 
			}
		}
	}
	Goto waitrequest
	
	// handle the second request
	State handleticket {
		onMsg( ticketrequest : ticketrequest( TICKET ) ) {
			// need to check the time
			[# 
				var Time = 10  
				var Ticket = payloadArg(0).toInt()
			#] // System.currentTimeMillis() - time of the ticket
			
			if [# Time < TICKETTIME #] {
				println("$name accepting ticket n. $Ticket ") color green
				replyTo ticketrequest with ticketaccepted : ticketaccepted( $Ticket ) 
				
				println("$name sending request to trolley...") color green
				forward trolley -m gotakecharge : gotakecharge( $Ticket )
				// update load
			}
			
			else {
				println("$name refusing ticket n. $Ticket - EXPIRED ") color green
				
				replyTo ticketrequest with ticketrefused : ticketrefused( $TicketNumber )
			}
		}
		// remove the request from the list
	}
	Goto waitrequest
}