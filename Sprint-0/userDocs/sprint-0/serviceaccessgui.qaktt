QActor serviceaccessgui context ctxcoldstorageservice {
	
	State s0 initial {
		printCurrentMessage
		println("$name START ") color blue
	}
	Goto sendstore
	
	// send the first request to the service
	State sendstore {
		[# var CurrentWeight = ( Math.round( Math.random() * 100 ) )  #]
		println("$name SEND REQUEST kg $CurrentWeight") color blue
		request coldstorageservice -m storerequest : storerequest($CurrentWeight)
	}
	Transition t0 whenReply storeaccepted -> sendticket
				whenReply storerefused -> endwork
				
	// send the second request to the service	
	State sendticket {
		
		delay 1000
		onMsg( storeaccepted : storeaccepted( TICKET, KG ) ) {
			
			[# 
				var TicketNumber = payloadArg(0)
				var Load = payloadArg(1)
			#]
			
			println("$name MOVING TO INDOOR --> ticket: $TicketNumber, $Load kg ") color blue
			
			delay 3000
			
			println("$name SENDING TICKET: $TicketNumber") color blue
			request coldstorageservice -m ticketrequest : ticketrequest($TicketNumber)
		}
	}
	Transition t0 whenReply ticketaccepted -> endwork
				whenReply ticketrefused -> endwork
				
	// end work
	State endwork {
		onMsg( storerefused : storerefused( X ) ) {
			[# var Load = payloadArg(0) #]
			println("$name - request of $Load kg refused. Not enough free space...") color blue
		}
		
		onMsg( ticketrefused : ticketrefused( X ) ) {
			
			[# var TicketNumber = payloadArg(0) #]
			println("$name - request n. $TicketNumber refused. Too much time has passed...") color blue
		}
		
		onMsg( ticketaccepted : ticketaccepted( X ) ) {
			
			[# var TicketNumber = payloadArg(0) #]
			println("$name - request n. $TicketNumber accepted. All requests sent!") color blue
		}
	}
}