QActor trolley context ctxcoldstorageservice {
	
	State s0 initial {
		printCurrentMessage
		println("$name START ") color magenta
		println("$name engage BASIC ROBOT ") color magenta
		request basicrobot -m engage: engage(trolley, 150)
	}
	Transition t0 whenReply engagedone -> waitrequest
	//Goto waitrequest
	
	// wait for a request
	State waitrequest {
		forward basicrobot -m setrobotstate : setpos(0,0,down)
		println("$name waiting for requests...") color magenta
	}  
	Transition t0 whenMsg gotakecharge -> gotoindoor
	
	// go to indoot
	State gotoindoor { 
		onMsg( gotakecharge : gotakecharge( TICKET ) ){
			println("$name moving to INDOOR") color magenta
		}
		
		delay 500 // simulate the movement
		request basicrobot -m moverobot : moverobot (0,4) //(0,4) position of INDOOR
	}
	Transition t0 whenReply moverobotdone -> takeload
					whenReply moverobotfailed -> failed
	
	// take the load
	State takeload {
		println("$name taking the load...") color magenta
		//[# CommUtils.waitTheUser("$name HIT to terminate load") #] //simulate the command 
		delay 500
		// replyTo ticketrequest with chargetaken
	}
	Goto gotocoldroom
	
	// go to cold room
	State gotocoldroom {
		println("$name moving to COLDROOM") color magenta
		request basicrobot -m moverobot: moverobot(4,3)
		delay 500 
	}
	Transition t0 whenReply moverobotdone -> storeload
			 		whenReply moverobotfailed -> failed
	
	// store the load
	State storeload {
		println("$name storing the load...") color magenta
		//[# CommUtils.waitTheUser("$name HIT to terminate.") #] //simulate the command 
		
		delay 2000
		// waits for requests
	}
	Transition t0 whenTime 2000 -> gohome
		 			whenMsg gotakecharge -> gotoindoor

	 
	// go home
	State gohome{
		println("$name going HOME...") color magenta
		request basicrobot -m moverobot: moverobot (0 ,0)
		delay 2000 // simulate the movement
	}
	Transition t0 whenReply moverobotdone -> trolleyathome
						whenReply moverobotfailed -> failed
	
	// at home 
	State trolleyathome {
		
		forward basicrobot -m setrobotstate : setpos(0,0,down)
		println("$name trolley at home") color magenta
		
		
		forward basicrobot -m disengage : disengage(trolley)
		
		println("$name  disengaged") color magenta
		delay 1000 //avoid to premature abort of connection
		[# System.exit(0) #]
	}
	
	//failed
	State failed {
		println("$name moverobot to indoor failed") color magenta
	}
}